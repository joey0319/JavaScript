// 호이스팅 : 자바스크립트 엔진이 코드를 실행하기 전
// 변수, 함수, 클래스의 선언문을 끌어 올리는 것을 말한다.
// 변수의 선언과 초기화를 분리한 후, 선언만!!! 코드의 최상단으로 끌어올린다.

// 변수 선언 키워드 var은 호이스팅이 발생한다.


// 함수는 호이스팅에 의해 선언전에 사용해도 작동한다.
print();

function print() {
    console.log('hello')
}

// let,const를 사용해 변수를 선언할 경우, 클래스를 선언하는 경우
//선언만 호이스팅이 되고 초기화(실제 변수값 할당)는 안됨  = 있다는 존재 자체는 알지만 초기화는 안됨
// 초기화 전, 변수에 접근하면 컴파일 에러가 발생한다.
console.log(hi)
let hi = 'hi'


// 이렇게 let으로 function을 정의하면 초기화전 접근이 안됨
let function1 = function () {

}

// 아래의 경우에도 에러가 발생한다.
// 블럭안에서 변수를 선언했기 때문에
// 일단 선언은 호이스팅 되어서 x가 블럭내부에 선언되었다는 정보 자체는 알고있다.
// 하지만 초기화가 2로 안되어서 참조할 수는 없어서 에러가 난다.
let x = 1;
{
    console.log(x)
    let x = 2
}

